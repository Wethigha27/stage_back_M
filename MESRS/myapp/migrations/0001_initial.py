# Generated by Django 5.2.4 on 2025-08-05 22:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('nni', models.CharField(max_length=10, unique=True)),
                ('nationalite', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('MASCULIN', 'Masculin'), ('FEMININ', 'Féminin')], max_length=10)),
                ('situation_familiale', models.CharField(max_length=50)),
                ('adresse', models.TextField()),
                ('nom_pere', models.CharField(max_length=100)),
                ('dernier_diplome', models.CharField(max_length=200)),
                ('pays_obtention_diplome', models.CharField(max_length=100)),
                ('annee_obtention_diplome', models.IntegerField()),
                ('specialite_formation', models.CharField(max_length=200)),
                ('fonction', models.CharField(max_length=100)),
                ('type_employe', models.CharField(choices=[('enseignant', 'Personnel Enseignant'), ('pat', 'Personnel PAT'), ('contractuel', 'Personnel Contractuel')], max_length=15)),
                ('numero_employe', models.CharField(max_length=20, unique=True)),
                ('date_embauche', models.DateField()),
                ('statut_actif', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipe', to='myapp.personne')),
            ],
        ),
        migrations.CreateModel(
            name='Recrutement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre_poste', models.CharField(max_length=200)),
                ('type_employe', models.CharField(choices=[('enseignant', 'Enseignant'), ('pat', 'Personnel PAT'), ('contractuel', 'Contractuel')], max_length=15)),
                ('type_employe_specifique', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('requis_post', models.TextField()),
                ('date_publication', models.DateField(auto_now_add=True)),
                ('date_limite', models.DateField()),
                ('date_entree_prevue', models.DateField()),
                ('statut_offre', models.CharField(choices=[('ouverte', 'Ouverte'), ('fermee', 'Fermée'), ('pourvue', 'Pourvue'), ('annulee', 'Annulée')], default='ouverte', max_length=15)),
                ('nombre_postes', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='StatutAbsence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('APPROUVÉ', 'Approuvé'), ('REFUSÉ', 'Refusé'), ('ANNULÉ', 'Annulé')], max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatutCandidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('REÇUE', 'Reçue'), ('EN_EXAMEN', 'En examen'), ('QUALIFIÉE', 'Qualifiée'), ('ENTRETIEN', 'Entretien'), ('ACCEPTÉE', 'Acceptée'), ('REFUSÉE', 'Refusée')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatutOffre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('OUVERTE', 'Ouverte'), ('FERMEE', 'Fermée'), ('POURVUE', 'Pourvue'), ('ANNULEE', 'Annulée')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatutPaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('EN_COURS', 'En cours'), ('PAYÉ', 'Payé'), ('SUSPENDU', 'Suspendu'), ('ANNULÉ', 'Annulé')], max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeAbsence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('CONGÉ_ANNUEL', 'Congé annuel'), ('CONGÉ_MALADIE', 'Congé maladie'), ('CONGÉ_MATERNITÉ', 'Congé maternité'), ('DÉTACHEMENT', 'Détachement'), ('DISPONIBILITÉ', 'Disponibilité'), ('ANNÉE_SABBATIQUE', 'Année sabbatique')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeContrat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('CDD', 'CDD'), ('CDI', 'CDI'), ('CONSULTANT', 'Consultant'), ('STAGE', 'Stage')], max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('CONTRAT', 'Contrat'), ('COTE_NOMINATION', 'Cote de nomination'), ('DIPLÔME', 'Diplôme'), ('CERTIFICAT', 'Certificat'), ('ÉVALUATION', 'Évaluation'), ('CV', 'CV'), ('PHOTO', 'Photo')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(choices=[('ENSEIGNEMENT', 'Enseignement'), ('ADMINISTRATION', 'Administration'), ('RECHERCHE', 'Recherche'), ('TECHNIQUE', 'Technique')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin_rh', 'Administrateur RH'), ('chef_enseignant', 'Chef Service Enseignant'), ('chef_pat', 'Chef Service Personnel PAT'), ('chef_contractuel', 'Chef Service Contractuel'), ('employe', 'Employé')], default='employe', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contractuel',
            fields=[
                ('personne', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myapp.personne')),
                ('type_contrat', models.CharField(choices=[('CDD', 'CDD'), ('CDI', 'CDI'), ('CONSULTANT', 'Consultant'), ('STAGE', 'Stage')], max_length=15)),
                ('duree_contrat', models.CharField(max_length=100)),
                ('date_debut_contrat', models.DateField()),
                ('date_fin_contrat', models.DateField(blank=True, null=True)),
                ('salaire_mensuel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('personne', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myapp.personne')),
                ('corps', models.CharField(max_length=100)),
                ('grade', models.CharField(choices=[('professeur', 'Professeur'), ('maitre_assistant', 'Maître Assistant'), ('assistant', 'Assistant'), ('docteur', 'Docteur')], max_length=100)),
                ('echelon', models.CharField(max_length=50)),
                ('indice', models.IntegerField()),
                ('date_entree_service_publique', models.DateField()),
                ('date_entree_enseignement_superieur', models.DateField()),
                ('date_fin_service_obligatoire', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PersonnelPAT',
            fields=[
                ('personne', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myapp.personne')),
                ('grade', models.CharField(max_length=100)),
                ('poste', models.CharField(choices=[('sg', 'Secrétaire Général'), ('conseil', 'Conseil'), ('charge_mission', 'Chargé de Mission'), ('directeur', 'Directeur'), ('chef_service', 'Chef de Service'), ('chef_division', 'Chef de Division'), ('autre', 'Autre')], default='autre', max_length=20)),
                ('nbi_mac', models.IntegerField()),
                ('indice', models.IntegerField()),
                ('anciennete_echelon', models.CharField(max_length=50)),
                ('date_changement', models.DateField()),
                ('anciennete_grade', models.CharField(max_length=50)),
                ('date_nomination', models.DateField()),
                ('date_prise_service', models.DateField()),
            ],
        ),
        migrations.AddField(
            model_name='personne',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_absence', models.CharField(choices=[('CONGÉ_ANNUEL', 'Congé annuel'), ('CONGÉ_MALADIE', 'Congé maladie'), ('CONGÉ_MATERNITÉ', 'Congé maternité'), ('DÉTACHEMENT', 'Détachement'), ('DISPONIBILITÉ', 'Disponibilité'), ('ANNÉE_SABBATIQUE', 'Année sabbatique')], max_length=20)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('APPROUVÉ', 'Approuvé'), ('REFUSÉ', 'Refusé'), ('ANNULÉ', 'Annulé')], default='EN_ATTENTE', max_length=15)),
                ('document_justificatif', models.FileField(blank=True, null=True, upload_to='justificatifs/')),
                ('date_demande_absence', models.DateField(auto_now_add=True)),
                ('motif_refus', models.TextField(blank=True)),
                ('commentaire_approbateur', models.TextField(blank=True)),
                ('approuve_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='myapp.personne')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('type_document', models.CharField(choices=[('CONTRAT', 'Contrat'), ('COTE_NOMINATION', 'Cote de nomination'), ('DIPLÔME', 'Diplôme'), ('CERTIFICAT', 'Certificat'), ('ÉVALUATION', 'Évaluation'), ('CV', 'CV'), ('PHOTO', 'Photo')], max_length=20)),
                ('chemin_fichier', models.FileField(upload_to='documents/')),
                ('taille_fichier', models.BigIntegerField()),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('proprietaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='myapp.personne')),
                ('uploade_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=15)),
                ('date_candidature', models.DateField(auto_now_add=True)),
                ('cv', models.FileField(upload_to='cv/')),
                ('lettre_motivation', models.FileField(upload_to='lettres/')),
                ('statut_candidature', models.CharField(choices=[('REÇUE', 'Reçue'), ('EN_EXAMEN', 'En examen'), ('QUALIFIÉE', 'Qualifiée'), ('ENTRETIEN', 'Entretien'), ('ACCEPTÉE', 'Acceptée'), ('REFUSÉE', 'Refusée')], default='REÇUE', max_length=20)),
                ('notes_evaluation', models.TextField(blank=True)),
                ('date_entretien', models.DateTimeField(blank=True, null=True)),
                ('recrutement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidats', to='myapp.recrutement')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('type_service', models.CharField(choices=[('enseignant', 'Service Enseignant'), ('pat', 'Service Personnel PAT'), ('contractuel', 'Service Contractuel')], max_length=15)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chef_service', models.ForeignKey(blank=True, limit_choices_to={'role__startswith': 'chef_'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='recrutement',
            name='service_recruteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.service'),
        ),
        migrations.AddField(
            model_name='personne',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employes', to='myapp.service'),
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('type_structure', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('parent_structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sous_structures', to='myapp.structure')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='structures_dirigees', to='myapp.personne')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structures', to='myapp.service')),
            ],
        ),
        migrations.AddField(
            model_name='recrutement',
            name='structure_recruteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.structure'),
        ),
        migrations.AddField(
            model_name='personne',
            name='structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.structure'),
        ),
        migrations.CreateModel(
            name='Detachement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acte_detachement', models.FileField(upload_to='detachements/')),
                ('date_debut_detachement', models.DateField()),
                ('date_fin_detachement', models.DateField()),
                ('motif_detachement', models.TextField()),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé')], default='EN_COURS', max_length=15)),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detachements', to='myapp.personne')),
                ('structure_detachement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detachements_entrants', to='myapp.structure')),
                ('structure_origine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detachements_sortants', to='myapp.structure')),
            ],
        ),
        migrations.CreateModel(
            name='Paie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire_net', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salaire_brut', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nb_enfants', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('allocations_familiales', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date_paiement', models.DateField()),
                ('mois_annee', models.CharField(max_length=7)),
                ('statut_paiement', models.CharField(choices=[('EN_COURS', 'En cours'), ('PAYÉ', 'Payé'), ('SUSPENDU', 'Suspendu'), ('ANNULÉ', 'Annulé')], default='EN_COURS', max_length=15)),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paies', to='myapp.personne')),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('personne', 'mois_annee')},
            },
        ),
        migrations.CreateModel(
            name='PermissionService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('view', 'Voir'), ('add', 'Ajouter'), ('change', 'Modifier'), ('delete', 'Supprimer'), ('approve_absence', 'Approuver absences'), ('manage_paie', 'Gérer paie')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.service')),
            ],
            options={
                'unique_together': {('user', 'service', 'permission')},
            },
        ),
    ]
